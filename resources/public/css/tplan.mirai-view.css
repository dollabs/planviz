/* Copyright (c) 2016 Dynamic Object Language Labs Inc.

   This software is licensed under the terms of the
   Apache License, Version 2.0 which can be found in
   the file LICENSE at the root of this distribution.
*/

@import url('https://fonts.googleapis.com/css?family=PT+Sans+Narrow');
@import url('https://fonts.googleapis.com/css?family=Roboto');
/* at 300 you get light and regular, at 400 FAIL */
@import url('https://fonts.googleapis.com/css?family=Open+Sans+Condensed:300');
/* at 300 you get light and regular, at 400 you get regular and bold */
@import url('https://fonts.googleapis.com/css?family=Nunito:400');

.font-family-helvetica {
    font-family: Helvetica, Verdana, Arial, sans-serif;
}

.font-family-pt-sans-narrow { font-family: 'PT Sans Narrow'; }
.font-family-roboto { font-family: 'Roboto'; }
.font-family-open-sans-condensed { font-family: 'Open Sans Condensed'; }
.font-family-nunito { font-family: 'Nunito'; }

.font-weight-light { font-weight: 300; }
.font-weight-regular { font-weight: 400; }
.font-weight-bold { font-weight: 700; }

.font-size-7 { font-size: 7px; }
.font-size-8 { font-size: 8px; }
.font-size-9 { font-size: 9px; }
.font-size-10 { font-size: 10px; }
.font-size-11 { font-size: 11px; }
.font-size-12 { font-size: 12px; }
.font-size-13 { font-size: 13px; }

svg, g, rect, circle, text, symbol, use {
    pointer-events: all;
}

.plain {
    fill: none;
    stroke: black;
    stroke-width: 1px;
}

#arrowhead {
    fill: #444; /* controls color for all the arrowheads; */
}

/* state specific arrowheads */
#arrowhead-normal { fill: #66ccff; }
#arrowhead-impossible { fill: silver; }
#arrowhead-start { fill:  #80ff80; } /* previously negotiation */
#arrowhead-negotiation { fill:  #80ff80; }
#arrowhead-best { fill: #ffbf00; }
#arrowhead-active { fill: #00ff00; }
#arrowhead-started { fill: #00ff00; } /* previously active */
#arrowhead-finished { fill: #009900; }
#arrowhead-cancelled { fill: #009900; }
#arrowhead-failed { fill: grey; }

#arrowlight {
    fill: lightblue;
}

#arrow, #arrow-normal {
    /* fill: #555; */
    fill: rgba(100,100,100,0.9);
}

#arrow-long, #arrow-normal-long {
    /* fill: #888; */
    fill: rgba(150,150,150,0.9);
}

#arrow-very-long {
    /* fill: #ccc; */
    fill: rgba(200,200,200,0.9);
}

#arrow-failed, #arrow-failed-long, #arrow-failed-very-long {
    fill: grey;
}

#choicehem > circle {
    fill: blue;
}

.outline {
    fill: none;
    stroke: green;
    stroke-width: 1px;
}

.planview {
    fill: rgba(0,0,255,0.2);
    stroke: none;
}


.activity-normal, .null-activity-normal, .delay-activity-normal, .parallel-edge-normal, .aggregation-normal {
    fill: none;
    stroke: #66ccff;  /* gray #444  light-blue  #66ccff */
    stroke-width: 3.0px;
}

.aggregation-mixed
{
    fill: none;
    stroke: #111;
    stroke-width: 3.0px;
}

.activity-hidden, .null-activity-hidden, .delay-activity-hidden, .aggregation-hidden, .parallel-edge-hidden, .choice-edge-hidden {
    fill: none;
    stroke: none;
    stroke-width: 3.0px;
}

.choice-edge-normal {
    fill: none;
    /* stroke: #888;         /*  Bookmark!  This needs to be talked about  */
    stroke: #66ccff;  /* same as parallel-edge-normal */
    stroke-width: 3.0px;
}

.target-unselected {
    /* DEBUG */
    /* fill: lightgrey; */
    fill: none;
}

.node .target-unselected {
    fill: none;
    stroke: none;
}

.node .target-selected {
    opacity: 0.67;
    fill: yellow;
}

.node:hover .target-selected, .node:hover .target-unselected {
                                  opacity: 0.67;
                                  fill: Fuchsia;
                              }

.edge .target {
    fill-opacity: 0.67;
    opacity: 0.67;
    stroke-width: 8px;
}

.edge .target-unselected {
    fill-opacity: 0.67;
    opacity: 0.67;
    stroke: none;
    stroke-width: 8px;
}

.edge .target-selected {
    fill-opacity: 0.67;
    opacity: 0.67;
    stroke: yellow;
    stroke-width: 8px;
}

.edge:hover .target-selected, .edge:hover .target-unselected {
                                  stroke: Fuchsia;
                                  stroke-width: 8px;
                              }

/*.............Activities(TPN)................*/

.activity-active, .null-activity-active, .delay-activity-active, .activity-started, .null-activity-started, .delay-activity-started, .choice-edge-active, .parallel-edge-active, .choice-edge-started, .parallel-edge-started, .aggregation-started, .aggregation-active {
    fill: none;
    stroke: #00ff00;  /*flashing green*/
    animation-name: example;
    animation-duration: 1s;
    animation-iteration-count: infinite;
    stroke-width: 3.0px;
}

/* Standard syntax */
@keyframes example {
    0% {stroke: #80ff80;}
    50% {stroke: #00b300;}
    100% {stroke: #80ff80;}
}

.activity-finished, .activity-cancelled, .null-activity-finished, .delay-activity-finished, .choice-edge-finished, .parallel-edge-finished, .aggregation-finished {
    fill: none;
    stroke: #009900;   /*dark green*/
    stroke-width: 3.0px;
}

.activity-negotiation, .null-activity-negotiation, .delay-activity-negotiation, .activity-start, .null-activity-start, .delay-activity-start, .choice-edge-negotiation, .parallel-edge-negotiation, .aggregation-start, .aggregation-negotiation  {
    fill: none;
    stroke: #80ff80;   /*light green*/
    stroke-width: 3.0px;
}

.activity-best, .null-activity-best, .delay-activity-best, .choice-edge-best, .parallel-edge-best, .aggregation-best {
    fill: none;
    stroke: #ffbf00;   /*gold*/
    stroke-width: 3.0px;
}
/*TODO infeasile is same as impossible. Update as appropriate*/
.activity-impossible, .null-activity-impossible, .delay-activity-impossible, .choice-edge-impossible, .parallel-edge-impossible, .aggregation-impossible  {
    fill: none;
    stroke: silver;    /*silver*/
    stroke-width: 3.0px;
}

.activity-failed, .null-activity-failed, .delay-activity-failed, .choice-edge-failed, .parallel-edge-failed, .aggregation-failed, .temporal-constraint-failed-very-long, .temporal-constraint-failed-long, .temporal-constraint-failed {
    fill: none;
    stroke: grey;
    stroke-width: 3.0px;
}


.edge-vedge {
    fill: none;
    stroke: yellow;
    stroke-width: 3.0px;
}

.virtual-normal {
    fill: none;
    stroke: #eee;
    stroke-width: 3.0px;
}

.temporal-constraint-normal {
    fill: none;
    stroke-dasharray: 2 2;
    /* stroke: rgba(100,100,100,0.5); */
    stroke: rgba(50,50,50,0.5);
    stroke-width: 3.0px;
}

.temporal-constraint-hidden {
    fill: none;
    stroke: none;
    /*
    stroke-dasharray: 2 2;
    stroke: rgba(100,100,100,0.1);
    stroke-width: 3.0px;
    */
}

.temporal-constraint-normal-long {
    fill: none;
    stroke-dasharray: 3 3;
    /* stroke: rgba(150,150,150,0.5); */
    stroke: rgba(75,75,75,0.5);
    stroke-width: 3.0px;
}

.temporal-constraint-hidden-long {
    fill: none;
    /*
    stroke-dasharray: 3 3;
    stroke: rgba(150,150,150,0.1);
    stroke-width: 3.0px;
    */
    stroke: none;
}

.temporal-constraint-normal-very-long {
    fill: none;
    stroke-dasharray: 4 4;
    /* stroke: rgba(200,200,200,0.5); */
    stroke: rgba(100,100,100,0.5);
    stroke-width: 1px;
}

.temporal-constraint-hidden-very-long {
    fill: none;
    /*
    stroke-dasharray: 4 4;
    stroke: rgba(200,200,200,0.1);
    stroke-width: 1px;
   */
    stroke: none;
}

.costle-constraint-normal {
    fill: none;
    stroke-dasharray: 3 1;
    stroke: rgba(200,50,50,0.5);
    stroke-width: 2.0px;
}

.costle-constraint-normal-long {
    fill: none;
    stroke-dasharray: 4 1;
    stroke: rgba(228,70,70,0.5);
    stroke-width: 1.5px;
}

.costle-constraint-normal-very-long {
    fill: none;
    stroke-dasharray: 5 1;
    stroke: rgba(255,120,120,0.5);
    stroke-width: 1px;
}

.rewardge-constraint-normal {
    fill: none;
    stroke-dasharray: 4 2;
    stroke: rgba(50,200,50,0.5);
    stroke-width: 2.0px;
}

.rewardge-constraint-normal-long {
    fill: none;
    stroke-dasharray: 5 2;
    stroke: rgba(70,228,70,0.5);
    stroke-width: 1.5px;
}

.rewardge-constraint-normal-very-long {
    fill: none;
    stroke-dasharray: 6 2;
    stroke: rgba(120,255,120,0.5);
    stroke-width: 1px;
}

/*.............Nodes(TPN)................*/

.parallel-normal, .choice-normal, .unchoice-normal, .state-normal {
    fill: #66ccff;
    stroke: #66ccff;
    /* DEBUG */
    /* fill: none; */
    /* stroke: none; */
    stroke-width: 3px;
}

.parallel-hidden-normal, .choice-hidden-normal, .unchoice-hidden-normal, .state-hidden-normal, .parallel-hidden-best, .choice-hidden-best, .unchoice-hidden-best, .state-hidden-best, .parallel-hidden-impossible, .choice-hidden-impossible, .unchoice-hidden-impossible, .state-hidden-impossible, .parallel-hidden-reached, .choice-hidden-reached, .unchoice-hidden-reached, .state-hidden-reached, .parallel-hidden-failed, .choice-hidden-failed, .unchoice-hidden-failed, .state-hidden-failed, .parallel-hidden-started, .choice-hidden-started, .unchoice-hidden-started, .state-hidden-started {
    /* fill: white; */
    fill: none;
    /* stroke: rgba(0,102,153,0.11); */
    stroke: none;
    stroke-width: 3px;
}

.parallel-best, .choice-best, .unchoice-best, .state-best {
    fill: #ffbf00; /* gold #ffbf00; */
    stroke: #ffbf00;  /* #b38600;*/
    stroke-width: 3px;
}

.parallel-impossible, .choice-impossible, .unchoice-impossible, .state-impossible {
    fill: silver; /* gray; */
    stroke: silver; /*#555555;*/
    stroke-width: 3px;
}

.parallel-reached, .choice-reached, .unchoice-reached, .state-reached {
    fill: #009900; /* DARK GREENn; */
    stroke: #009900;/*#004d00;*/
    stroke-width: 3px;
}

.parallel-failed, .choice-failed, .unchoice-failed, .state-failed {
    fill: grey; /* #ff0000; /* red; */
    stroke: lightgrey; /*#ff0000; /*#990000;*/
    stroke-width: 3px;
}

/* typically :started is not used for TPN nodes */
.parallel-started, .choice-started, .unchoice-started, .state-started {
    fill: #00ff00; /* green; */
    stroke: #009900; /* darker green; */
    stroke-width: 3px;
}

.hem-normal {
    fill: #b3e6ff; /* #66ccff = light-blue   #b3e6ff = lighter-blue  white*/
    stroke: #b3e6ff;
    stroke-width: 3.0px;
}

.hem-hidden {
    fill: white;
    stroke: rgba(0,0,0,0.1);
    stroke-width: 3.0px;
}

/* Bookmark!   This one below seems redundant*/
.hem-reached {
    fill: #009900;
    stroke: #009900;
    stroke-width: 3.0px;
}

.hem-best {
    fill: #ffbf00; /*gold*/
    stroke: #ffbf00;
    stroke-width: 3.0px;
}

.hem-impossible {
    fill: silver;
    stroke: silver;
    stroke-width: 3.0px;
}

.hem-reached {
    fill: #009900;
    stroke: #009900;
    stroke-width: 3.0px;
}

.hem-failed {
    fill: #ff0000;
    stroke: #ff0000;
    stroke-width: 3.0px;
}

.hem-started {
    /* fill: #0099cc; */
    fill: #00ff00;
    stroke: #00ff00;
    stroke-width: 3.0px;
}

#tooltip1 {
    fill: Cornsilk;
    stroke: Chocolate;
    stroke-width: 1.0px;
}

.active, .started {
    fill: #00ff00; /*Light green*/
    stroke: #006699;
    stroke-width: 4px;
}

.best {
    fill: magenta;
    stroke: #006699;
    stroke-width: 4px;
}

.negotiation, .start  {
    fill: orange;
    stroke: #006699;
    stroke-width: 4px;
}

.impossible {
    fill: grey;
    stroke: #006699;
    stroke-width: 4px;
}

.failed {
    fill: grey;
    stroke: #006699;
    stroke-width: 4px;
}

.state-virtual-normal {
    fill: #eee;
    stroke: lightgray;
    stroke-width: 4px;
}

.normal-probability {
    fill: #0099cc;
    stroke: #006699;
    stroke-width: 4px;
}

.active-probability, .started-probability {
    fill: blue;
    stroke: #006699;
    stroke-width: 4px;
}

.reached-probability {
    fill: #00ff00;
    stroke: #006699;
    stroke-width: 4px;
}

.best-probability {
    fill: magenta;
    stroke: #006699;
    stroke-width: 4px;
}

.negotiation-probability, .start-probability  {
    fill: orange;
    stroke: #006699;
    stroke-width: 4px;
}

.impossible-probability {
    fill: grey;
    stroke: #006699;
    stroke-width: 4px;
}

.failed-probability {
    fill: red;
    stroke: #006699;
    stroke-width: 4px;
}

.parallel-path {
    stroke: black;
    stroke-width: 3px;
}

/* .parallel-normal parallel { */
/* } */

.parallel-path-hidden {
    stroke: none;
    stroke-width: 3px;
}

.choice-circle {
    fill: none;
    stroke: black;
    /* stroke-width: 1.5px; */
    stroke-width: 3px;
}

.choice-circle-hidden {
    fill: none;
    stroke: none;
    stroke-width: 3px;
}

.unchoice-path {
    fill: none;
    stroke: #555;
    stroke-width: 2.2px;
}

.unchoice-path-hidden {
    fill: none;
    stroke: rgba(0,0,0,0.1);
    stroke-width: 2.2px;
}

text {
    font-size: 9px;
    font-family: Helvetica, Verdana, Arial, sans-serif;
    /* font-family: Roboto Condensed, Liberation Sans Narrow, Nimbus Sans Condensed,  Helvetica Narrow, Helvetica, Verdana, Arial, sans-serif; */
    pointer-events: none;
    /* text-shadow: 0.16em 0.16em 0.10em white, -0.16em -0.16em 0.10em white, -0.16em 0.16em 0.10em white, 0.16em -0.16em 0.10em white; */
}

text.node-label {
    /* font-size: 7px; */
    fill: DarkSlateGrey;
}

.show, .node:hover .node-tooltip, .edge:hover .edge-tooltip {
                                      fill-opacity: 1.0;
                                      opacity: 1.0;
                                  }

.hide {
    opacity: 0.0;
    fill-opacity: 0.0;
}

.node {
}

.edge {
}

.node-tooltip, .edge-tooltip {
    transition: opacity 0.5s ease;
}
.node-tooltip rect, .edge-tooltip rect {
    fill: Cornsilk;
    stroke: Chocolate;
    stroke-width: 1.0px;
}

.menu-box {
    fill: PowderBlue;
    stroke: MediumBlue;
    stroke-width: 1.0px;
}

.menu-stop1 {
    stop-color: #888;
}

.menu-stop2 {
    stop-color: white;
}

.menu-stop3 {
    stop-color: #888;
}

.menu-option {
    fill: white;
    stroke: none;
}

.menu-option:hover {
    fill: url(#menu-gradient);
}
